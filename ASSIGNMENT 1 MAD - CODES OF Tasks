# CODE 1 OF TASK NO 1 OF MAD ASSIGNMENT 1 

import 'package:flutter/material.dart'; 
 
void main() { 
  runApp(const MyApp()); 
}  
class MyApp extends StatelessWidget {   const MyApp({Key? key}) : super(key: key); 
 
  @override 
  Widget build(BuildContext context) {     return MaterialApp( 
      debugShowCheckedModeBanner: false,       home: const BiddingPage(), 
    ); 
  } 
}  
class BiddingPage extends StatelessWidget {   const BiddingPage({Key? key}) : super(key: key); 
 
  @override 
  Widget build(BuildContext context) {     return Scaffold( 
      appBar: AppBar(title: const Text('Bidding Page')),       body: const Center(         child: MaximumBid(), 
      ), 
      backgroundColor: Colors.blueGrey[100], // Set background color 
    ); 
  } 
}  
class MaximumBid extends StatefulWidget { 
  const MaximumBid({Key? key}) : super(key: key);  
  @override 
  _MaximumBidState createState() => _MaximumBidState(); 
}  
class _MaximumBidState extends State<MaximumBid> {   int _currentBid = 100;  
  void _increaseBid() => setState(() => _currentBid += 50);  
  @override 
  Widget build(BuildContext context) {     return Column( 
      mainAxisAlignment: MainAxisAlignment.center,       children: [ 
        Text( 
          'Current Maximum Bid: \$$_currentBid', 
          style: const TextStyle(fontSize: 24, fontWeight: FontWeight.bold), 
        ), 
        const SizedBox(height: 20),         ElevatedButton( 
          onPressed: _increaseBid, 
          child: const Text('Increase Bid'), 
        ), 
      ], 
    ); 
  } 
} 


CODE 2 OF TASK NO 2 OF MAD ASSIGNMENT 1 

import 'dart:io';

void main() {
  // Step 1: Take input
  stdout.write("Enter your name: ");
  String name = stdin.readLineSync()!;

  stdout.write("Enter your age: ");
  int age = int.parse(stdin.readLineSync()!);

  if (age < 18) {
    print("Sorry $name, you are not eligible to register.");
    return; // stop execution
  }

  // Step 2: Ask how many numbers
  stdout.write("How many numbers do you want to enter? ");
  int n = int.parse(stdin.readLineSync()!);

  List<int> numbers = [];

  for (int i = 0; i < n; i++) {
    stdout.write("Enter number ${i + 1}: ");
    numbers.add(int.parse(stdin.readLineSync()!));
  }

  // Step 3: Calculate sums
  int sumEven = numbers.where((x) => x % 2 == 0).fold(0, (a, b) => a + b);
  int sumOdd = numbers.where((x) => x % 2 != 0).fold(0, (a, b) => a + b);
  int largest = numbers.reduce((a, b) => a > b ? a : b);
  int smallest = numbers.reduce((a, b) => a < b ? a : b);

  // Step 4: Print results
  print("\nResults:");
  print("Sum of even numbers: $sumEven");
  print("Sum of odd numbers: $sumOdd");
  print("Largest number: $largest");
  print("Smallest number: $smallest");
}

# CODE 3 OF TASK NO 3 OF MAD ASSIGNMENT 1 

import 'dart:io';

void main() {
  // Ask the user for input
  stdout.write("Enter a number (n): ");
  int n = int.parse(stdin.readLineSync()!);

  // Print the pyramid pattern using nested loops
  for (int i = 1; i <= n; i++) {
    for (int j = 1; j <= i; j++) {
      stdout.write("$j ");
    }
    print(""); // Move to next line after each row
  }
}


